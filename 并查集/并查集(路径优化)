
import java.util.Scanner;

public class Main {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
/*
 *  长度为10的一维数组
 */
		Scanner sc = new Scanner(System.in);
		int num[] = new int[10];
		for(int i=0;i<10;i++)
		{
			num[i] = i;
		}
		while(true)
		{
			System.out.println("输入想要连接的节点");
			int a1 = sc.nextInt();
			int a2 = sc.nextInt();
			Surge(a1, a2, num);
			for(int i=0;i<10;i++)
			{
				System.out.print(i+"所属于"+num[i]+" ");
			}
			System.out.println();
		}
	}
//	<用例分析:>
//	在连接1，2时，节点2执行语句为 num[2] = find(1,num),所以未改变值，因此需要改变值
	public static int Find(int i,int[] num)
	{
//
		if(i==num[i])
		{
			System.out.println("该节点属于"+num[i]);
			return i;
		}
		else {
			return Find(num[i], num);
		}
//		路径优化
	}
	public static void Surge(int i,int j,int[] num)
	{
		int max = Math.max(Find(i, num), Find(j, num));
		int min = Math.min(Find(i, num), Find(j, num));
//		[1,3]-[2,3] 执行2，3时，2所属为2，3所属为1 max:2 min=1
//		大的节点向小的节点？？
		int sign = max;
		for(int i1=0;i1<10;i1++)
		{
			if(num[i1]==sign)
			{
				System.out.println("连接类节点:"+i);
				num[i1] = min;
			}
		}
//		但是没有改变数组值:改变了数组的值
		
	}

}
